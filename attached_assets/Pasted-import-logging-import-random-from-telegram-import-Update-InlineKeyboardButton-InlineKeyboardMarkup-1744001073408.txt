import logging
import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler, CallbackContext
from telegram.ext import CallbackContext

# Bot Token
TOKEN = '7414241197:AAEDfQRkBIduU3-jC4ZIlVKEmx4s9RlkvLA'

# Kullanıcı verilerini tutmak (Örnek)
user_data = {}

# Logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

# Kullanıcıları Başlatma
def start(update: Update, context: CallbackContext) -> None:
    """Başlangıç komutu ile kullanıcılara hoş geldiniz mesajı ve 'Play' butonu gönderilir."""
    keyboard = [[InlineKeyboardButton("Play", callback_data='start_play')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text('Welcome to DogteaMinerBot! Click Play to start mining.', reply_markup=reply_markup)

# Madenciliği Başlatma
def play(update: Update, context: CallbackContext) -> None:
    """Madencilik başlatılır."""
    update.callback_query.answer()
    user_id = update.callback_query.from_user.id
    if user_id not in user_data:
        user_data[user_id] = {'xp': 0, 'level': 1, 'rank': 'Wood', 'tokens': 0}

    # Madencilik başlatılır
    update.callback_query.edit_message_text("You started mining! Collect DOGTEA tokens.")

# Madencilik Sistemi
def mine(update: Update, context: CallbackContext) -> None:
    """Madencilik yaparak DOGTEA token'ları kazanılır."""
    user_id = update.message.from_user.id
    if user_id not in user_data:
        user_data[user_id] = {'xp': 0, 'level': 1, 'rank': 'Wood', 'tokens': 0}

    # Madencilik işlemi simülasyonu
    tokens_earned = random.randint(1, 10)
    user_data[user_id]['tokens'] += tokens_earned
    user_data[user_id]['xp'] += tokens_earned

    # Seviye ve rütbe kontrolü
    level_up(user_id)

    update.message.reply_text(f"Mining completed! You earned {tokens_earned} DOGTEA tokens. Total: {user_data[user_id]['tokens']} DOGTEA")

# Kullanıcı Profili
def profile(update: Update, context: CallbackContext) -> None:
    """Kullanıcı profili görüntülenir."""
    user_id = update.message.from_user.id
    if user_id not in user_data:
        update.message.reply_text("You have not started mining yet. Type /start to begin.")
        return

    user_info = user_data[user_id]
    update.message.reply_text(f"Profile:\nXP: {user_info['xp']}\nLevel: {user_info['level']}\nRank: {user_info['rank']}\nDOGTEA Tokens: {user_info['tokens']}")

# Seviye ve Rütbe Sistemi
def level_up(user_id: int) -> None:
    """XP arttıkça kullanıcı seviye atlar ve rütbesi yükselir."""
    xp = user_data[user_id]['xp']
    if xp >= 100:
        user_data[user_id]['level'] = 2
        user_data[user_id]['rank'] = 'Bronze'
    if xp >= 200:
        user_data[user_id]['level'] = 3
        user_data[user_id]['rank'] = 'Silver'
    if xp >= 500:
        user_data[user_id]['level'] = 4
        user_data[user_id]['rank'] = 'Gold'
    if xp >= 1000:
        user_data[user_id]['level'] = 5
        user_data[user_id]['rank'] = 'Platinum'
    if xp >= 2000:
        user_data[user_id]['level'] = 6
        user_data[user_id]['rank'] = 'Diamond'
    if xp >= 5000:
        user_data[user_id]['level'] = 7
        user_data[user_id]['rank'] = 'Mythic'

# Mini Oyunlar: Tahmin (Guessing Game)
def guessing_game(update: Update, context: CallbackContext) -> None:
    """Tahmin oyunu eklenebilir."""
    user_id = update.message.from_user.id
    if user_id not in user_data:
        user_data[user_id] = {'xp': 0, 'level': 1, 'rank': 'Wood', 'tokens': 0}

    # Kullanıcıya 1 ile 10 arasında bir sayı tahmin ettirir
    number_to_guess = random.randint(1, 10)
    update.message.reply_text("Guess a number between 1 and 10.")
    # Oyun mantığını burada geliştirebilirsiniz...

# Referral Sistemi
def referral(update: Update, context: CallbackContext) -> None:
    """Davetiye sistemi."""
    update.message.reply_text("Refer a friend and earn extra DOGTEA tokens!")

# Ana Bot Fonksiyonu
def main() -> None:
    """Botu başlatan ana fonksiyon."""
    updater = Updater(TOKEN)

    dispatcher = updater.dispatcher

    # Komutlar
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("mine", mine))
    dispatcher.add_handler(CommandHandler("profile", profile))
    dispatcher.add_handler(CommandHandler("guess", guessing_game))
    dispatcher.add_handler(CommandHandler("referral", referral))

    # Callback query için handler (örneğin Play butonu)
    dispatcher.add_handler(CallbackQueryHandler(play, pattern='start_play'))

    # Botu çalıştır
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()